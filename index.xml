<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wtf go</title><link>https://golang.wtf/</link><description>Recent content on wtf go</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 06 Aug 2021 07:57:00 -0700</lastBuildDate><atom:link href="https://golang.wtf/index.xml" rel="self" type="application/rss+xml"/><item><title>Unmarshal JSON data in non-standard ways</title><link>https://golang.wtf/2021/08/unmarshal-json-data-in-non-standard-ways/</link><pubDate>Fri, 06 Aug 2021 07:57:00 -0700</pubDate><guid>https://golang.wtf/2021/08/unmarshal-json-data-in-non-standard-ways/</guid><description>How to leverage the Unmarshaler interface to parse JSON data in ways that fit your needs</description></item><item><title>Are maps, slices, and channels thread safe</title><link>https://golang.wtf/2021/08/are-maps-slices-and-channels-thread-safe/</link><pubDate>Thu, 05 Aug 2021 07:56:54 -0700</pubDate><guid>https://golang.wtf/2021/08/are-maps-slices-and-channels-thread-safe/</guid><description>TL;DR; maps and slices are not thread safe, channels are.</description></item><item><title>How to conditionally build and test source code</title><link>https://golang.wtf/2021/08/how-to-conditionally-build-and-test-source-code/</link><pubDate>Wed, 04 Aug 2021 16:08:02 -0700</pubDate><guid>https://golang.wtf/2021/08/how-to-conditionally-build-and-test-source-code/</guid><description>Build tags and special naming conventions are useful tools in your go toolbox</description></item></channel></rss>